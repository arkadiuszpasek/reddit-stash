{"version":3,"sources":["common/BorderAnimation.tsx","common/CenterDiv.tsx","utils/css.ts","styles/styleguide.ts","components/NavigationEntry.tsx","config.ts","components/icons/HoverIcon.tsx","actions/types/index.ts","common/Shape.tsx","actions/styleActions.ts","services/api/ApiClient.ts","actions/tweetActions.ts","containers/NavigationList.tsx","reducers/styleReducer.ts","services/LocalStorageService.ts","reducers/tweetReducer.ts","reducers/index.ts","components/dates/DashboardDateField.tsx","components/dates/DashboardDatePicker.tsx","components/tweets/Tweet.tsx","components/tweets/TweetList.tsx","components/tweets/TweetPreview.tsx","containers/Dashboard.tsx","containers/About.tsx","common/Buttons.tsx","components/icons/Twitter.tsx","containers/Home.tsx","containers/Settings.tsx","index.tsx"],"names":["HoverBorder","styled","div","t","theme","colorP1","transitionParams","CenterDiv","hexToRgbString","hex","result","exec","parseInt","hexToRgb","join","parseToRgb","object","Object","fromEntries","entries","filter","startsWith","map","darkColors","colorBG0","colorBG1","colorBG2","colorBG3","colorP2","colorGray0","colorGray1","colorText","colorTextN","shadow","lightColors","darkColorsRGB","lightColorsRGB","distances","defaultRadius","m1","m2","m3","m4","m5","M1","M2","M3","styles","transitionParams1","fontN1","fontN2","fontN3","fontN4","fontN5","fontN6","fontN7","fontN8","fontH1","fontH2","fontH3","fontH4","fontH5","darkTheme","lightTheme","NavEntryDiv","Text","span","NavigationEntry","text","icon","rest","Icon","config","Hover","colorP1RGB","HoverIcon","ActionType","size","fontSize","Diamond","AppAction","type","this","payload","action","ToggleThemeAction","ApiClient","baseUrl","url","port","shuffle","range","i","id","author","userName","firstName","lastName","content","timestamp","Date","now","instance","LoadTweetsAction","dispatch","a","getInstance","getTweets","tweets","SetLowerDateBound","date","SetUpperDateBound","MenuContainer","MenuIcon","Container","colorBG0RGB","LinksContainer","Seperator","BottomIcons","ThemeTypes","NavigationListState","useState","isOpen","setIsOpen","toggleOpen","mapDispatchToProps","toggleTheme","create","connect","undefined","Drawer","anchor","open","onClose","classes","paper","onClick","to","href","target","rel","LocalStorageService","key","localStorage","getItem","JSON","parse","value","setItem","stringify","initialState","getValue","themeType","Dark","getThemeUpdates","state","Light","lowerDateBound","upperDateBound","rootReducer","combineReducers","style","isActionOfType","update","saveValue","startOf","DateFieldDiv","DateField","props","placeholder","filtered","withPlaceholder","Component","DashboardDatePicker","textComponent","onChange","utils","DateMomentUtils","DatePicker","disableFuture","variant","TextFieldComponent","format","Flex","Image","Content","MetaText","p","ContentText","ReadMoreBtn","Tweet","tweet","index","Grow","appear","in","timeout","toLocaleString","substring","filteredLower","isSameOrBefore","moment","isSameOrAfter","onTweetPicked","ImageSection","ImageSectionText","ContinueSection","ContinueAction","ColumnContainer","FiltersContainer","ListColumn","PreviewColumn","setLowerBound","setUpperBound","lowerBound","upperBound","currentTweet","setCurrentTweet","DateFieldHOC","About","CallToActionBtn","CallToActionOutlinedBtn","src","Overlay","BannerContainer","Actions","TextTitle","TestDescribtion","GetStartedActions","ContentContainer","CardsContainer","Card","CardTitle","CardDescribtion","Home","Twitter","InputsContainer","InputDiv","Input","input","Settings","urlInput","setUrlInput","portInput","setPortInput","useEffect","s","e","setBaseUrl","store","createStore","applyMiddleware","thunk","Global","createGlobalStyle","colorBG1RGB","Background","loadTweets","Main","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c5b8243b.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const HoverBorder = styled.div`\r\n  &:after {\r\n    content: \"\";\r\n    width: 0;\r\n    height: 1px;\r\n    margin: 1px;\r\n    display: block;\r\n    background-color: ${t => t.theme.colorP1};\r\n    transition: width ${t => t.theme.transitionParams};\r\n\r\n  }\r\n  &:hover:after {\r\n    width: 100%;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const CenterDiv = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n","import { ColorsRGB } from '../styles/styleguide';\r\n\r\nexport function hexToRgb(hex: string) {\r\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n  return result ? [\r\n    parseInt(result[1], 16),\r\n    parseInt(result[2], 16),\r\n    parseInt(result[3], 16)\r\n   ] : [255, 255, 255];\r\n}\r\n\r\nexport function hexToRgbString(hex: string) {\r\n  return hexToRgb(hex).join(',');\r\n}\r\n\r\nexport function parseToRgb(object: { [key: string]: string}): ColorsRGB {\r\n  return Object.fromEntries(Object.entries(object)\r\n    .filter(([key]) => (key as string).startsWith('color'))\r\n    .map(([key, value]) => {\r\n    return [key + 'RGB', hexToRgbString(value as string)];\r\n  })) as ColorsRGB;\r\n}\r\n\r\n// export function defaultShadow({ theme }: TTP) {\r\n//   return `-webkit-box-shadow: 10px 10px 10px 0px rgba(${theme.color5RGB},0.6);\r\n//   -moz-box-shadow: 10px 10px 10px 0px rgba(${theme.color5RGB},0.6);\r\n//   box-shadow: 10px 10px 10px 0px rgba(${theme.color5RGB},0.6);`;\r\n// }\r\n// export function smallShadow({ theme }: TTP) {\r\n//   return `-webkit-box-shadow: 2px 2px 2px 0px rgba(${theme.color5RGB},0.6);\r\n//   -moz-box-shadow: 2px 2px 2px 0px rgba(${theme.color5RGB},0.6);\r\n//   box-shadow: 2px 2px 2px 0px rgba(${theme.color5RGB},0.6);`;\r\n// }\r\n","import { parseToRgb } from '../utils/css';\r\n\r\nconst darkColors = {\r\n  colorBG0: '#121212',\r\n  colorBG1: '#181818',\r\n  colorBG2: '#242424',\r\n  colorBG3: '#363636',\r\n  colorP1: '#B15CE6',\r\n  colorP2: '#CDE650',\r\n  colorGray0: '#363636',\r\n  colorGray1: '#3f3f3f',\r\n  colorText: '#f3f3f3',\r\n  colorTextN: '#121212',\r\n  shadow: 'none',\r\n};\r\n\r\nconst lightColors = {\r\n  colorBG0: '#f3f3f3',\r\n  colorBG1: '#f3f3f3',\r\n  colorBG2: '#f3f3f3',\r\n  colorBG3: '#d2d2d2',\r\n  colorP1: '#6E00B3',\r\n  colorP2: '#ADCC14',\r\n  colorGray0: '#363636',\r\n  colorGray1: '#3f3f3f',\r\n  colorText: '#121212',\r\n  colorTextN: '#f3f3f3',\r\n  shadow: `-webkit-box-shadow: 4px 4px 8px 1px rgba(18,18,18,0.4);\r\n  -moz-box-shadow: 4px 4px 8px 1px rgba(18,18,18,0.4);\r\n  box-shadow: 4px 4px 8px 1px rgba(18,18,18,0.4);`\r\n};\r\n\r\nexport const darkColorsRGB = parseToRgb(darkColors);\r\n\r\nexport const lightColorsRGB = parseToRgb(lightColors);\r\n\r\nconst distances = {\r\n  defaultRadius: '4px',\r\n\r\n  m1: '5px',\r\n  m2: '10px',\r\n  m3: '15px',\r\n  m4: '20px',\r\n  m5: '25px',\r\n  M1: '50px',\r\n  M2: '75px',\r\n  M3: '100px',\r\n};\r\n\r\nconst params = {\r\n  transitionParams: '280ms ease-out',\r\n  transitionParams1: '140ms ease-out',\r\n};\r\n\r\nconst fonts = {\r\n  fontN1: '200 12px Roboto',\r\n  fontN2: '200 14px Roboto',\r\n  fontN3: '200 16px Roboto',\r\n  fontN4: '200 18px Roboto',\r\n  fontN5: '200 20px Roboto',\r\n  fontN6: '200 24px Roboto',\r\n  fontN7: '200 28px Roboto',\r\n  fontN8: '200 32px Roboto',\r\n\r\n  fontH1: '200 72px Roboto',\r\n  fontH2: '200 56px Roboto',\r\n  fontH3: '200 48px Roboto',\r\n  fontH4: '200 42px Roboto',\r\n  fontH5: '200 36px Roboto',\r\n};\r\n\r\nexport const styles = {\r\n  ...distances,\r\n  ...distances,\r\n  ...params,\r\n  ...fonts,\r\n};\r\n\r\nexport const darkTheme = {\r\n  ...styles,\r\n  ...darkColors,\r\n  ...darkColorsRGB,\r\n};\r\n\r\nexport const lightTheme = {\r\n  ...styles,\r\n  ...lightColors,\r\n  ...lightColorsRGB,\r\n};\r\n\r\nexport type ColorsRGB = {\r\n  colorBG0RGB: string,\r\n  colorBG1RGB: string,\r\n  colorBG2RGB: string,\r\n  colorBG3RGB: string,\r\n  colorP1RGB: string,\r\n  colorP2RGB: string,\r\n  colorGray0RGB: string,\r\n  colorGray1RGB: string,\r\n};\r\n\r\nexport type Theme = typeof lightTheme;\r\n\r\nexport const appearTimeout = 750;\r\n","import { Icon } from '@material-ui/core';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { HoverBorder } from '../common/BorderAnimation';\r\nimport { CenterDiv } from '../common/CenterDiv';\r\nimport { styles } from '../styles/styleguide';\r\n\r\nconst NavEntryDiv = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  height: 42px;\r\n  border-radius: ${t => t.theme.defaultRadius};\r\n  transition: all ${t => t.theme.transitionParams};\r\n  font: ${t => t.theme.fontN5};\r\n  cursor: pointer;\r\n  margin-left: ${t => t.theme.m2};\r\n\r\n  &:hover {\r\n    color: ${t => t.theme.colorP1};\r\n    margin-left: ${styles.m3};\r\n  }\r\n`;\r\n\r\nconst Text = styled.span`\r\n  margin-left: ${styles.m2};\r\n`;\r\n\r\ninterface Props extends React.HTMLAttributes<HTMLDivElement> {\r\n  text: string;\r\n  icon: string;\r\n}\r\nfunction NavigationEntry({ text, icon, ...rest }: Props) {\r\n  return (\r\n    <HoverBorder>\r\n      <NavEntryDiv {...rest}>\r\n        <CenterDiv>\r\n          <Icon>{icon}</Icon>\r\n          <Text>{text}</Text>\r\n        </CenterDiv>\r\n      </NavEntryDiv>\r\n    </HoverBorder>\r\n  );\r\n}\r\n\r\nexport default NavigationEntry;\r\n","export const config = {\r\n  documentationURL: 'https://github.com/bohatiuk/twitter-stash'\r\n};\r\n","import { Icon } from '@material-ui/core';\r\nimport styled from 'styled-components';\r\nimport React from 'react';\r\n\r\nconst Hover = styled.div`\r\n  transition: color ${t => t.theme.transitionParams};\r\n  cursor: pointer;\r\n  color: ${t => `rgba(${t.theme.colorP1RGB}, 0.7)`};\r\n  &:hover {\r\n    color: ${t => t.theme.colorP1};\r\n  }\r\n`;\r\ninterface Props extends React.HTMLAttributes<HTMLDivElement> {\r\n  icon: string;\r\n  size?: 'large' | 'small';\r\n}\r\nfunction HoverIcon({ icon, size, ...rest }: Props) {\r\n  return (\r\n    <Hover {...rest}>\r\n      <Icon fontSize={size}>{icon}</Icon>\r\n    </Hover>\r\n  );\r\n}\r\n\r\nexport default HoverIcon;\r\n","import { AppThunk } from '..';\r\n\r\nexport enum ActionType {\r\n  StyleChangeTheme = 'StyleChangeTheme',\r\n\r\n  TweetLoad = 'TweetLoad',\r\n  TweetSetLowerBound = 'TweetSetLowerBound',\r\n  TweetSetUpperBound = 'TweetSetUpperBound',\r\n}\r\n\r\nexport interface TAction {\r\n  type: string;\r\n  payload?: any;\r\n}\r\nexport abstract class AppAction {\r\n  public static type: string;\r\n\r\n  static create(t?: any): TAction | AppThunk {\r\n    return {\r\n      type: this.type,\r\n      payload: t\r\n    };\r\n  }\r\n\r\n  static isActionOfType(action: TAction): action is TAction {\r\n    return this.type === action.type;\r\n  }\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport const Dot = styled.div`\r\n  width: 8px;\r\n  height: 8px;\r\n  border-radius: 50px;\r\n  background-color: ${t => t.theme.colorText};\r\n`;\r\n\r\nexport const Diamond = styled.div`\r\n  width: 8px;\r\n  height: 8px;\r\n  background-color: ${t => t.theme.colorText};\r\n  transform: rotate(45deg);\r\n`;\r\n","import { ActionType, AppAction, TAction } from './types';\r\n\r\nexport function toggleTheme() {\r\n  return {\r\n    type: ActionType.StyleChangeTheme,\r\n  };\r\n}\r\nexport class ToggleThemeAction extends AppAction {\r\n  public static type = 'ToggleThemeAction';\r\n\r\n  static create() {\r\n    return { type: ToggleThemeAction.type };\r\n  }\r\n\r\n  static isActionOfType(action: TAction): action is TToggleThemeAction {\r\n    return ToggleThemeAction.type === action.type;\r\n  }\r\n}\r\nexport type TToggleThemeAction = TAction;\r\n","import { ApiTweet } from './types';\r\nimport { range, shuffle } from 'lodash';\r\n\r\nexport class ApiClient {\r\n  private static instance: ApiClient;\r\n  private baseUrl = 'localhost:8000';\r\n\r\n  private constructor() { }\r\n\r\n  public static getInstance(): ApiClient {\r\n    if (!this.instance) {\r\n      this.instance = new ApiClient();\r\n    }\r\n\r\n    return this.instance;\r\n  }\r\n\r\n  public setBaseUrl(url: string, port: string): void {\r\n    this.baseUrl = `${url}:${port}`;\r\n  }\r\n\r\n  public async getTweets(): Promise<ApiTweet[]> {\r\n    return shuffle(range(7).map(i => {\r\n      return {\r\n        id: 'raeanonid' + i,\r\n        author: {\r\n          userName: 'elonmusk',\r\n          firstName: 'Elon',\r\n          lastName: 'Musk'\r\n        },\r\n        content: 'Please consider moving to Starbase or greater Brownsville/South Padre area in Texas & encourage friends to do so! '\r\n          + 'SpaceX’s hiring needs for engineers, technicians, builders & essential support personnel of all kinds are growing rapidly.',\r\n        timestamp: Date.now() - 60000000 * i,\r\n        url: 'https://twitter.com/elonmusk/status/1376901399867441156'\r\n      };\r\n    }));\r\n  }\r\n}\r\n","import { MaterialUiPickersDate } from '@material-ui/pickers/typings/date';\r\nimport { AppThunk } from '.';\r\nimport { ApiClient } from '../services/api/ApiClient';\r\nimport { ApiTweet } from '../services/api/types';\r\nimport { AppAction, TAction } from './types';\r\n\r\nexport class LoadTweetsAction extends AppAction {\r\n  public static type = 'LoadTweetsAction';\r\n\r\n  static create(): AppThunk {\r\n    return async dispatch => {\r\n      const tweets = await ApiClient.getInstance().getTweets();\r\n\r\n      dispatch({\r\n        type: LoadTweetsAction.type,\r\n        payload: tweets,\r\n      });\r\n    };\r\n  }\r\n\r\n  static isActionOfType(action: TAction): action is TLoadTweetsActions {\r\n    return LoadTweetsAction.type === action.type;\r\n  }\r\n}\r\nexport interface TLoadTweetsActions extends TAction {\r\n  payload: ApiTweet[];\r\n}\r\n\r\nexport class SetLowerDateBound extends AppAction {\r\n  public static type = 'SetLowerDateBound';\r\n\r\n  static create(date: MaterialUiPickersDate) {\r\n    return {\r\n      type: SetLowerDateBound.type,\r\n      payload: date\r\n    };\r\n  }\r\n\r\n  static isActionOfType(action: TAction): action is TSetLowerDateBound {\r\n    return SetLowerDateBound.type === action.type;\r\n  }\r\n}\r\n\r\nexport interface TSetLowerDateBound extends TAction {\r\n  payload: MaterialUiPickersDate;\r\n}\r\n\r\nexport class SetUpperDateBound extends AppAction {\r\n  public static type = 'SetUpperDateBound';\r\n\r\n  static create(date: MaterialUiPickersDate) {\r\n    return {\r\n      type: SetUpperDateBound.type,\r\n      payload: date\r\n    };\r\n  }\r\n\r\n  static isActionOfType(action: TAction): action is TSetUpperDateBound {\r\n    return SetUpperDateBound.type === action.type;\r\n  }\r\n}\r\n\r\nexport interface TSetUpperDateBound extends TAction {\r\n  payload: MaterialUiPickersDate;\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Drawer } from '@material-ui/core';\r\nimport NavigationEntry from '../components/NavigationEntry';\r\nimport styled from 'styled-components';\r\nimport { styles } from '../styles/styleguide';\r\nimport { Link } from 'react-router-dom';\r\nimport { config } from '../config';\r\nimport HoverIcon from '../components/icons/HoverIcon';\r\nimport { Diamond } from '../common/Shape';\r\nimport { connect } from 'react-redux';\r\nimport { ToggleThemeAction } from '../actions';\r\n\r\nconst MenuContainer = styled.div`\r\n  position: sticky;\r\n  z-index: 50;\r\n  width: 100%;\r\n  height: 70px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  background-color: ${(t) => t.theme.colorBG1};\r\n  box-shadow: ${(t) => t.theme.shadow};\r\n`;\r\n\r\nconst MenuIcon = styled.div`\r\n  padding: 0 ${styles.m4};\r\n`;\r\n\r\nconst Container = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: flex-start;\r\n  width: 320px;\r\n  padding: ${styles.m4} 0;\r\n  padding-left: ${styles.m4};\r\n  background-color: ${(t) => `rgba(${t.theme.colorBG0RGB}, 1)`};\r\n  color: ${(t) => t.theme.colorText};\r\n`;\r\n\r\nconst LinksContainer = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: ${styles.m1} 0;\r\n`;\r\n\r\nconst Seperator = styled.div`\r\n  margin: ${styles.m4} 0;\r\n  align-self: center;\r\n`;\r\n\r\nconst BottomIcons = styled.div`\r\n  display: flex;\r\n\r\n  & > * {\r\n    margin-right: 16px;\r\n  }\r\n`;\r\n\r\nfunction NavigationList({ toggleTheme }: Props) {\r\n  const { isOpen, toggleOpen } = NavigationListState();\r\n\r\n  const renderDrawer = () => {\r\n    return (\r\n      <Drawer\r\n        anchor=\"left\"\r\n        open={isOpen}\r\n        onClose={toggleOpen}\r\n        classes={{ paper: 'drawer-bg' }}\r\n      >\r\n        <Container>\r\n          <HoverIcon onClick={toggleOpen} size=\"large\" icon=\"menu_open\" />\r\n          <LinksContainer>\r\n            <Seperator>\r\n              <Diamond />\r\n            </Seperator>\r\n            <Link to=\"/\">\r\n              <NavigationEntry text=\"Home\" icon=\"home\" onClick={toggleOpen} />\r\n            </Link>\r\n            <Link to=\"/dashboard\">\r\n              <NavigationEntry\r\n                text=\"Dashboard\"\r\n                icon=\"select_all\"\r\n                onClick={toggleOpen}\r\n              />\r\n            </Link>\r\n            <Seperator>\r\n              <Diamond />\r\n            </Seperator>\r\n            <Link to=\"/about\">\r\n              <NavigationEntry\r\n                text=\"About\"\r\n                icon=\"fingerprint\"\r\n                onClick={toggleOpen}\r\n              />\r\n            </Link>\r\n            <a href={config.documentationURL} target=\"_blank\" rel=\"noreferrer\">\r\n              <NavigationEntry\r\n                text=\"Documentation\"\r\n                icon=\"code\"\r\n                onClick={toggleOpen}\r\n              />\r\n            </a>\r\n          </LinksContainer>\r\n          <BottomIcons>\r\n            <HoverIcon\r\n              onClick={toggleTheme}\r\n              size=\"large\"\r\n              icon=\"invert_colors\"\r\n            />\r\n            <Link to=\"/settings\">\r\n              <HoverIcon size=\"large\" icon=\"settings\" />\r\n            </Link>\r\n          </BottomIcons>\r\n        </Container>\r\n      </Drawer>\r\n    );\r\n  };\r\n\r\n  const renderNavBar = () => {\r\n    return (\r\n      <MenuContainer>\r\n        {!isOpen && (\r\n          <MenuIcon>\r\n            <HoverIcon onClick={toggleOpen} size=\"large\" icon=\"menu\" />\r\n          </MenuIcon>\r\n        )}\r\n      </MenuContainer>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {renderDrawer()}\r\n      {renderNavBar()}\r\n    </>\r\n  );\r\n}\r\n\r\ninterface State {\r\n  isOpen: boolean;\r\n  toggleOpen: () => void;\r\n}\r\n\r\nconst NavigationListState = (): State => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggleOpen = () => setIsOpen(!isOpen);\r\n\r\n  return {\r\n    isOpen,\r\n    toggleOpen,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  toggleTheme: ToggleThemeAction.create,\r\n};\r\n\r\ntype Props = typeof mapDispatchToProps;\r\n\r\nexport default connect(undefined, mapDispatchToProps)(NavigationList);\r\n","import { TAction } from '../actions';\r\nimport { ToggleThemeAction } from '../actions/styleActions';\r\nimport { LocalStorageService } from '../services/LocalStorageService';\r\nimport { darkTheme, lightTheme, Theme } from '../styles/styleguide';\r\n\r\nexport enum ThemeTypes { Light, Dark }\r\n\r\nexport interface State {\r\n  themeType: ThemeTypes;\r\n  theme: Theme;\r\n}\r\n\r\nconst savedTheme = LocalStorageService.getValue(\"theme\");\r\nconst initialState: State = savedTheme || {\r\n  themeType: ThemeTypes.Dark,\r\n  theme: darkTheme\r\n};\r\n\r\nexport function styleReducer(state = initialState, action: TAction) {\r\n  if (ToggleThemeAction.isActionOfType(action)) {\r\n    const update = getThemeUpdates(state);\r\n    LocalStorageService.saveValue(\"theme\", update);\r\n    return { ...state, ...update };\r\n  }\r\n\r\n  return state;\r\n}\r\n\r\nexport function getThemeUpdates(state: State): Partial<State> {\r\n  if (state.themeType === ThemeTypes.Dark) {\r\n    return {\r\n      themeType: ThemeTypes.Light,\r\n      theme: lightTheme\r\n    };\r\n  }\r\n\r\n  return {\r\n    themeType: ThemeTypes.Dark,\r\n    theme: darkTheme\r\n  };\r\n}\r\n","\r\nexport class LocalStorageService {\r\n  public static getValue(key: string): any {\r\n    const i = localStorage.getItem(key);\r\n    if (!i) {\r\n      return undefined;\r\n    }\r\n    try {\r\n      return JSON.parse(i);\r\n    } catch {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  public static saveValue(key: string, value: any): void {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  }\r\n}","// tslint:disable:no-null-keyword\r\nimport { MaterialUiPickersDate } from '@material-ui/pickers/typings/date';\r\nimport { LoadTweetsAction, SetLowerDateBound, SetUpperDateBound } from '../actions/tweetActions';\r\nimport { TAction } from '../actions/types';\r\nimport { ApiTweet } from '../services/api/types';\r\n\r\nexport interface State {\r\n  tweets: ApiTweet[];\r\n  lowerDateBound: MaterialUiPickersDate;\r\n  upperDateBound: MaterialUiPickersDate;\r\n}\r\nconst initialState: State = {\r\n  tweets: [],\r\n  lowerDateBound: null,\r\n  upperDateBound: null\r\n};\r\n\r\nexport function tweetReducer(state = initialState, action: TAction): State {\r\n  if (LoadTweetsAction.isActionOfType(action)) {\r\n    return { ...state, tweets: action.payload };\r\n  }\r\n  else if (SetLowerDateBound.isActionOfType(action)) {\r\n    return { ...state, lowerDateBound: action.payload ? action.payload.startOf('day') : null };\r\n  }\r\n  else if (SetUpperDateBound.isActionOfType(action)) {\r\n    return { ...state, upperDateBound: action.payload ? action.payload.startOf('day') : null };\r\n  }\r\n\r\n  return state;\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { State as StyleState, styleReducer } from './styleReducer';\r\nimport { State as TweetState, tweetReducer } from './tweetReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n  style: styleReducer,\r\n  tweets: tweetReducer\r\n});\r\n\r\nexport interface GlobalState {\r\n  style: StyleState;\r\n  tweets: TweetState;\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { TextFieldProps as MaterialTextFieldProps } from '@material-ui/core/TextField/TextField';\r\nimport { Icon } from '@material-ui/core';\r\nimport { CenterDiv } from '../../common/CenterDiv';\r\nimport { styles } from '../../styles/styleguide';\r\n\r\nconst DateFieldDiv = styled(CenterDiv)`\r\n  transition: color ${styles.transitionParams};\r\n  cursor: pointer;\r\n  border-bottom: 1px solid ${t => t.theme.colorGray0};\r\n  padding: 0 ${styles.m2};\r\n\r\n  &:hover {\r\n    color: ${t => t.theme.colorP1};\r\n  }\r\n`;\r\n\r\nexport type DateFieldProps = Pick<MaterialTextFieldProps, 'onClick' | 'value'> & { placeholder: string };\r\nexport function DateField(props: DateFieldProps) {\r\nconst { value, placeholder, ...filtered } = props;\r\nif (typeof value === 'string') {\r\n  if (value) {\r\n    return (\r\n      <DateFieldDiv {...filtered }>\r\n        {placeholder}: {value}\r\n      </DateFieldDiv>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <DateFieldDiv {...filtered }>\r\n      {placeholder}\r\n      <Icon>expand_more</Icon>\r\n    </DateFieldDiv>\r\n  );\r\n}\r\n\r\nreturn <></>;\r\n}\r\n\r\nexport type ReducerTextFieldProps = Omit<DateFieldProps, 'placeholder'>;\r\nexport function withPlaceholder(placeholder: string, Component: React.ComponentType<DateFieldProps>) {\r\n  return (props: ReducerTextFieldProps) => (\r\n    <Component placeholder={placeholder} {...props} />\r\n  );\r\n}\r\n","import React from 'react';\r\nimport DateMomentUtils from '@date-io/moment';\r\nimport { DatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport { ReducerTextFieldProps as DashboardDateFieldProps } from './DashboardDateField';\r\nimport { MaterialUiPickersDate } from '@material-ui/pickers/typings/date';\r\n\r\ninterface Props {\r\n  textComponent: React.ComponentType<DashboardDateFieldProps>;\r\n  onChange(date: MaterialUiPickersDate): void;\r\n  value: MaterialUiPickersDate;\r\n}\r\nfunction DashboardDatePicker({ textComponent, onChange, value }: Props) {\r\n  return (\r\n    <MuiPickersUtilsProvider utils={DateMomentUtils}>\r\n      <DatePicker\r\n        value={value}\r\n        onChange={onChange}\r\n        disableFuture\r\n        variant='dialog'\r\n        TextFieldComponent={textComponent}\r\n        format='Do [of] MMMM YYYY'\r\n      />\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n}\r\n\r\nexport default DashboardDatePicker;\r\n","import { Grow, Icon } from '@material-ui/core';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { ApiTweet } from '../../services/api/types';\r\nimport { styles } from '../../styles/styleguide';\r\n\r\ninterface Props {\r\n  tweet: ApiTweet;\r\n  index: number;\r\n}\r\n\r\nconst Container = styled.div`\r\n  max-width: 920px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  border-bottom: 1px solid ${t => t.theme.colorGray0};\r\n  padding: 20px;\r\n  cursor: pointer;\r\n\r\n  transition: all ${styles.transitionParams};\r\n  * {\r\n    transition: all ${styles.transitionParams};\r\n  }\r\n\r\n  &:hover {\r\n    color: ${t => t.theme.colorP1};\r\n  }\r\n\r\n`;\r\nconst Flex = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n`;\r\nconst Image = styled.div`\r\n  position: relative;\r\n  width: 220px;\r\n  min-width: 220px;\r\n  height: 125px;\r\n  min-height: 125px;\r\n  border-radius: ${styles.defaultRadius};\r\n\r\n  &:before {\r\n    position: absolute;\r\n    right: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    content: '';\r\n    filter: blur(2px) saturate(100%) contrast(45%) brightness(130%);\r\n    background-color: rgba(255,255,255,0.3);\r\n  }\r\n`;\r\nconst Content = styled.div`\r\n  max-width: 60%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`;\r\nconst MetaText = styled.p`\r\n  margin-left: ${styles.m3};\r\n  font: ${styles.fontN3};\r\n  text-align: left;\r\n`;\r\nconst ContentText = styled.p`\r\n  margin-left: ${styles.m3};\r\n  font: ${styles.fontN2};\r\n  text-align: left;\r\n`;\r\n\r\nconst ReadMoreBtn = styled.div`\r\n  color: ${t => t.theme.colorGray0};\r\n`;\r\n\r\nfunction Tweet({ tweet, index }: Props) {\r\n  return (\r\n    <Grow appear in timeout={300 + index * 200}>\r\n      <Container>\r\n        <Flex>\r\n          <Image />\r\n          <Content>\r\n            <MetaText>\r\n              {tweet.author.firstName} {tweet.author.lastName} - {new Date(tweet.timestamp).toLocaleString()}\r\n            </MetaText>\r\n            <ContentText>\r\n              {tweet.content.substring(0, 150)}\r\n            </ContentText>\r\n          </Content>\r\n        </Flex>\r\n        <ReadMoreBtn>\r\n          <Icon style={{ fontSize: '56px' }}>\r\n            keyboard_arrow_right\r\n          </Icon>\r\n        </ReadMoreBtn>\r\n      </Container>\r\n    </Grow>\r\n  );\r\n}\r\n\r\nexport default Tweet;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { GlobalState } from '../../reducers';\r\nimport Tweet from './Tweet';\r\nimport { ApiTweet } from '../../services/api/types';\r\nimport moment from 'moment';\r\n\r\nfunction TweetList({ tweets, onTweetPicked }: Props) {\r\n  return (\r\n    <div>\r\n      {tweets.map((tweet, i) => (\r\n        <div key={tweet.id} onClick={() => onTweetPicked(tweet)}>\r\n          <Tweet tweet={tweet} index={i} />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state: GlobalState) {\r\n  const filteredLower = state.tweets.lowerDateBound\r\n    ? state.tweets.tweets.filter(tweet => state.tweets.lowerDateBound?.isSameOrBefore(moment(tweet.timestamp).startOf('day')))\r\n    : state.tweets.tweets;\r\n\r\n  const filtered = state.tweets.upperDateBound\r\n    ? filteredLower.filter(tweet => state.tweets.upperDateBound?.isSameOrAfter(moment(tweet.timestamp).startOf('day')))\r\n    : filteredLower;\r\n\r\n  return {\r\n    tweets: filtered\r\n  };\r\n}\r\ntype Props = ReturnType<typeof mapStateToProps> & {\r\n  onTweetPicked(tweet: ApiTweet): void;\r\n};\r\n\r\nexport default connect(mapStateToProps)(TweetList);\r\n","import { Grow } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { ApiTweet } from '../../services/api/types';\r\nimport { styles } from '../../styles/styleguide';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-top: 100px;\r\n  padding: ${styles.m5};\r\n`;\r\n\r\nconst Image = styled.div`\r\n  width: 440px;\r\n  min-width: 440px;\r\n  height: 250px;\r\n  min-height: 250px;\r\n  background: gray;\r\n  border-radius: ${styles.defaultRadius};\r\n`;\r\n\r\nconst ImageSection = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  padding: ${styles.m5} 0 ${styles.M1} ${styles.m5};\r\n  border-bottom: 1px solid ${t => t.theme.colorGray0};\r\n`;\r\n\r\nconst ImageSectionText = styled.p`\r\n  display: flex;\r\n  flex-direction: column;\r\n  font: ${styles.fontN4};\r\n  text-align: left;\r\n  margin-left: ${styles.m5};\r\n`;\r\n\r\nconst ContentText = styled.p`\r\n  font: ${styles.fontN3};\r\n  text-align: left;\r\n  padding: ${styles.m5};\r\n`;\r\n\r\nconst ContinueSection = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n`;\r\n\r\nconst ContinueAction = styled.a`\r\n  font: ${styles.fontN4};\r\n  text-decoration: underline;\r\n  margin: ${styles.m3};\r\n  cursor: pointer;\r\n  transition: color ${styles.transitionParams};\r\n\r\n  &:hover {\r\n    color: ${t => t.theme.colorP1};\r\n  }\r\n`;\r\n\r\nfunction TweetPreview({ tweet }: Props) {\r\n  return (\r\n    <Grow appear in timeout={500}>\r\n      <Container>\r\n        <ImageSection>\r\n          <Image />\r\n          <ImageSectionText>\r\n            <p>\r\n              Published by: {tweet.author.firstName} {tweet.author.lastName}\r\n            </p>\r\n            <p>\r\n              Published on: {new Date(tweet.timestamp).toLocaleString()}\r\n            </p>\r\n          </ImageSectionText>\r\n        </ImageSection>\r\n        <ContentText>\r\n          {tweet.content}\r\n        </ContentText>\r\n        <ContinueSection>\r\n          <ContinueAction>\r\n            Read analysis\r\n          </ContinueAction>\r\n          <ContinueAction href={tweet.url} target='_blank'>\r\n            See the original\r\n          </ContinueAction>\r\n        </ContinueSection>\r\n      </Container>\r\n    </Grow>\r\n  );\r\n}\r\n\r\ntype Props = { tweet: ApiTweet };\r\n\r\nexport default connect()(TweetPreview);\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { SetLowerDateBound, SetUpperDateBound } from '../actions';\r\nimport { DateField, withPlaceholder as DateFieldHOC } from '../components/dates/DashboardDateField';\r\nimport DashboardDatePicker from '../components/dates/DashboardDatePicker';\r\nimport TweetList from '../components/tweets/TweetList';\r\nimport TweetPreview from '../components/tweets/TweetPreview';\r\nimport { GlobalState } from '../reducers';\r\nimport { ApiTweet } from '../services/api/types';\r\nimport { styles } from '../styles/styleguide';\r\n\r\nconst ColumnContainer = styled.div`\r\n  width: 95%;\r\n  margin: 0 auto;\r\n  display: flex;\r\n\r\n  & > * {\r\n    margin-right: 0 ${styles.m5};\r\n  }\r\n`;\r\nconst FiltersContainer = styled.div`\r\n  margin: ${styles.m2} 90px;\r\n  display: flex;\r\n\r\n  & > * {\r\n    margin-right: ${styles.m4};\r\n  }\r\n`;\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: ${styles.m5} 0;\r\n`;\r\nconst ListColumn = styled.div`\r\n  max-width: 50%;\r\n`;\r\nconst PreviewColumn = styled.div`\r\n  max-width: 45%;\r\n`;\r\n\r\nfunction Dashboard({ setLowerBound, setUpperBound, lowerBound, upperBound }: ReduxProps) {\r\n  const [currentTweet, setCurrentTweet] = useState<ApiTweet>();\r\n\r\n  const handleTweetPicked = (tweet: ApiTweet) => {\r\n    setCurrentTweet(tweet);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <FiltersContainer>\r\n        <DashboardDatePicker\r\n          textComponent={DateFieldHOC('From', DateField)}\r\n          onChange={setLowerBound}\r\n          value={lowerBound}\r\n        />\r\n        <DashboardDatePicker\r\n          textComponent={DateFieldHOC('To', DateField)}\r\n          onChange={setUpperBound}\r\n          value={upperBound}\r\n        />\r\n      </FiltersContainer>\r\n      <ColumnContainer>\r\n        <ListColumn>\r\n          <TweetList onTweetPicked={handleTweetPicked} />\r\n        </ListColumn>\r\n        {currentTweet && (\r\n          <PreviewColumn>\r\n            <TweetPreview tweet={currentTweet} />\r\n          </PreviewColumn>\r\n        )}\r\n      </ColumnContainer>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setLowerBound: SetLowerDateBound.create,\r\n  setUpperBound: SetUpperDateBound.create\r\n};\r\n\r\nconst mapStateToProps = (state: GlobalState) => {\r\n  return {\r\n    lowerBound: state.tweets.lowerDateBound,\r\n    upperBound: state.tweets.upperDateBound\r\n  };\r\n};\r\n\r\ntype ReduxProps = typeof mapDispatchToProps & ReturnType<typeof mapStateToProps>;\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\r\n","import React from 'react';\r\n\r\nexport function About() {\r\n  return (\r\n    <div>\r\n      KKK\r\n    </div>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\nimport { styles } from '../styles/styleguide';\r\nimport { CenterDiv } from './CenterDiv';\r\n\r\nexport const CallToActionBtn = styled(CenterDiv)`\r\n  width: 240px;\r\n  height: 50px;\r\n  cursor: pointer;\r\n  font: ${styles.fontN4};\r\n  color: ${t => t.theme.colorText};\r\n  background-color: ${t => `rgba(${t.theme.colorP1RGB}, 0.7)`};\r\n  transition: all ${styles.transitionParams};\r\n  &:hover {\r\n    background-color: ${t => t.theme.colorP1};\r\n    color: ${t => t.theme.colorTextN};\r\n\r\n  }\r\n`;\r\n\r\nexport const CallToActionOutlinedBtn = styled(CallToActionBtn)`\r\n  background: transparent;\r\n  border: 1px solid ${t => `rgba(${t.theme.colorP1RGB}, 0.7)`};\r\n`;\r\n","import styled from 'styled-components';\r\nimport React from 'react';\r\nimport { ReactSVG } from 'react-svg';\r\nimport { CenterDiv } from '../../common/CenterDiv';\r\n\r\nconst Container = styled(CenterDiv)`\r\n  width: 360px;\r\n  font-size: 72px;\r\n\r\n  & svg {\r\n    fill: ${t => t.theme.colorBG0};\r\n  }\r\n`;\r\n\r\nfunction HoverIcon() {\r\n  return (\r\n    <Container>\r\n      <ReactSVG src='twitter.svg' />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default HoverIcon;\r\n","import { Grow, Icon } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { CallToActionBtn, CallToActionOutlinedBtn } from '../common/Buttons';\r\nimport Twitter from '../components/icons/Twitter';\r\nimport { config } from '../config';\r\nimport { styles } from '../styles/styleguide';\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Overlay = styled.div`\r\n  margin: 90px 0 0 20%;\r\n`;\r\n\r\nconst BannerContainer = styled.div`\r\n  position: relative;\r\n  height: 400px;\r\n  width: 100%;\r\n  overflow: hidden;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  background-color: ${t => t.theme.colorBG3};\r\n`;\r\n\r\nconst Actions = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  margin-left: 90px;\r\n`;\r\n\r\nconst TextTitle = styled.div`\r\n  margin-top: 92px;\r\n  font: ${styles.fontH5};\r\n  color: ${t => t.theme.colorP1};\r\n`;\r\n\r\nconst TestDescribtion = styled.div`\r\n  margin-top: 12px;\r\n  font: ${styles.fontN6};\r\n`;\r\n\r\nconst GetStartedActions = styled.div`\r\n  margin-top: 64px;\r\n  display: flex;\r\n\r\n  & * {\r\n    margin-right: ${styles.m5};\r\n  }\r\n`;\r\n\r\nconst ContentContainer = styled.div`\r\n  width: 80%;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst CardsContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  margin-top: ${styles.M2};\r\n  text-align: left;\r\n`;\r\n\r\nconst Card = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  max-width: 240px;\r\n`;\r\n\r\nconst CardTitle = styled.div`\r\n  font: ${styles.fontN7};\r\n  margin-bottom: ${styles.m4};\r\n`;\r\n\r\nconst CardDescribtion = styled.div`\r\n  font: ${styles.fontN5};\r\n`;\r\n\r\nfunction Home() {\r\n  return (\r\n    <Container>\r\n      <BannerContainer>\r\n        <Overlay>\r\n          <Twitter />\r\n        </Overlay>\r\n        <Actions>\r\n          <TextTitle>\r\n            TWITTER STASH\r\n          </TextTitle>\r\n          <TestDescribtion>\r\n            An application doing sth\r\n          </TestDescribtion>\r\n          <GetStartedActions>\r\n            <Link to='/dashboard'>\r\n              <CallToActionBtn>Get started</CallToActionBtn>\r\n            </Link>\r\n            <a href={config.documentationURL} target='_blank' rel='noreferrer'>\r\n              <CallToActionOutlinedBtn>\r\n                <span>\r\n                  Read docs\r\n                </span>\r\n                <Icon>\r\n                  keyboard_arrow_right\r\n                </Icon>\r\n              </CallToActionOutlinedBtn>\r\n            </a>\r\n          </GetStartedActions>\r\n        </Actions>\r\n      </BannerContainer>\r\n      <ContentContainer>\r\n        <CardsContainer>\r\n          <Grow in appear timeout={500}>\r\n            <Card>\r\n              <CardTitle>Something</CardTitle>\r\n              <CardDescribtion>Lorem ipsum dolor sit am. Lorem ipsum dolor sit am.</CardDescribtion>\r\n            </Card>\r\n          </Grow>\r\n          <Grow in appear timeout={1200}>\r\n          <Card>\r\n            <CardTitle>Something</CardTitle>\r\n            <CardDescribtion> you open it directly in the browser, you will see an empty page.\r\n              sit am. Lorem ipsum dolor sit am.</CardDescribtion>\r\n          </Card>\r\n          </Grow>\r\n          <Grow in appear timeout={1500}>\r\n          <Card>\r\n            <CardTitle>Something</CardTitle>\r\n            <CardDescribtion>Lorem ipsum  you open it directly in the browser, you will\r\n              see an empty page. dolor sit am.</CardDescribtion>\r\n          </Card>\r\n          </Grow>\r\n        </CardsContainer>\r\n      </ContentContainer>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { CallToActionBtn } from '../common/Buttons';\r\nimport { ApiClient } from '../services/api/ApiClient';\r\nimport { LocalStorageService } from '../services/LocalStorageService';\r\nimport { darkTheme } from '../styles/styleguide';\r\n\r\nconst Container = styled.div`\r\n  margin: 40px auto;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  max-width: 400px;\r\n`;\r\nconst InputsContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 20px;\r\n`;\r\nconst InputDiv = styled.div`\r\n  margin: 5px;\r\n`;\r\nconst Input = styled.input`\r\n  padding: 10px;\r\n  background-color: ${(t) => t.theme.colorBG0};\r\n  border: 1px solid ${(t) => t.theme.colorText};\r\n  border-radius: ${darkTheme.defaultRadius};\r\n  placeholder: ${(t) => t.theme.colorGray0};\r\n  color: ${(t) => t.theme.colorText};\r\n  font: ${darkTheme.fontN4};\r\n`;\r\nexport function Settings() {\r\n  const [urlInput, setUrlInput] = useState('');\r\n  const [portInput, setPortInput] = useState('');\r\n\r\n  useEffect(() => {\r\n    const s: { url: string; port: string } =\r\n      LocalStorageService.getValue('server');\r\n    if (s) {\r\n      setUrlInput(s.url);\r\n      setPortInput(s.port);\r\n    }\r\n  }, []);\r\n\r\n  const handleSubmit = () => {\r\n    ApiClient.getInstance().setBaseUrl(urlInput, portInput);\r\n    LocalStorageService.saveValue('server', { url: urlInput, port: portInput });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <InputsContainer>\r\n        Connect to backend at:\r\n        <InputDiv>\r\n          <Input\r\n            id=\"url\"\r\n            value={urlInput}\r\n            onChange={(e) => setUrlInput(e.target.value)}\r\n            placeholder=\"localhost\"\r\n          />\r\n        </InputDiv>\r\n        <InputDiv>\r\n          <Input\r\n            id=\"outlined-basic\"\r\n            value={portInput}\r\n            onChange={(e) => setPortInput(e.target.value)}\r\n            placeholder=\"8080\"\r\n          />\r\n        </InputDiv>\r\n      </InputsContainer>\r\n      <CallToActionBtn onClick={handleSubmit}>Save</CallToActionBtn>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport NavigationList from './containers/NavigationList';\r\nimport { applyMiddleware, createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport { GlobalState, rootReducer } from './reducers';\r\nimport thunk from 'redux-thunk';\r\nimport styled, { createGlobalStyle, ThemeProvider } from 'styled-components';\r\nimport Dashboard from './containers/Dashboard';\r\nimport { connect } from 'react-redux';\r\nimport { About } from './containers/About';\r\nimport Home from './containers/Home';\r\nimport { LoadTweetsAction } from './actions';\r\nimport { Settings } from './containers/Settings';\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nconst Global = createGlobalStyle`\r\n  body {\r\n    text-align: center;\r\n    font-family: Roboto, Arial, Helvetica, sans-serif;\r\n    font-weight: 200;\r\n\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n\r\n    background-color: ${(t) => t.theme.colorBG0};\r\n    color: ${(t) => t.theme.colorText};\r\n  }\r\n\r\n  .drawer-bg {\r\n    background-color: rgba(${(t) => t.theme.colorBG1RGB}, 0.0) !important;\r\n  }\r\n\r\n  .MuiPickersToolbar-toolbar, .MuiPickersDay-daySelected {\r\n    background-color: ${(t) => t.theme.colorP1} !important;\r\n  }\r\n`;\r\n\r\nconst Background = styled.div`\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: -1;\r\n  background-color: ${(t) => t.theme.colorBG0};\r\n  background-size: 20px 20px;\r\n`;\r\n\r\nfunction MainComponent({ theme, loadTweets }: Props) {\r\n  useEffect(() => {\r\n    loadTweets();\r\n  }, [loadTweets]);\r\n\r\n  return (\r\n    <Router>\r\n      <ThemeProvider theme={theme}>\r\n        <Background />\r\n        <Global />\r\n        <NavigationList />\r\n        <Switch>\r\n          <Route path=\"/\" exact>\r\n            <Home />\r\n          </Route>\r\n          <Route path=\"/dashboard\" exact>\r\n            <Dashboard />\r\n          </Route>\r\n          <Route path=\"/about\" exact>\r\n            <About />\r\n          </Route>\r\n          <Route path=\"/settings\" exact>\r\n            <Settings />\r\n          </Route>\r\n        </Switch>\r\n      </ThemeProvider>\r\n    </Router>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps: Dispatch = {\r\n  loadTweets: LoadTweetsAction.create,\r\n};\r\ntype Dispatch = {\r\n  loadTweets(): void;\r\n};\r\n\r\nfunction mapStateToProps(state: GlobalState) {\r\n  return {\r\n    theme: state.style.theme,\r\n  };\r\n}\r\ntype Props = ReturnType<typeof mapStateToProps> & typeof mapDispatchToProps;\r\n\r\nconst Main = connect(mapStateToProps, mapDispatchToProps)(MainComponent);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Main />\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}